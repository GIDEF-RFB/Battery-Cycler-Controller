# This workflow will deploy in development environment the cycler controller module

name: Deploy cycler to STAGING - REAL BAT

on: workflow_call

env:
  ENV_CRED_TO_DEPLOY: ${{ secrets.ENV_CRED_TO_DEPLOY }}
  YAML_CRED_TO_DEPLOY: ${{ secrets.YAML_CRED_TO_DEPLOY }}

jobs:
  launch-real-bat:
    environment: staging
    name: Launch cycler controller in real environment
    runs-on: [self-hosted, linux, ARM64, plc]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test to get var and secrets
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_VAR: ${{ vars.CYCLER_STATION_ID }}"
          echo "$ENV_CRED_TO_DEPLOY"

      - name: Set secrets and log to deploy
        run: |
          echo "${{ secrets.ENV_CRED_TO_DEPLOY }}" > ./devops/.cred.env
          echo "${{ secrets.YAML_CRED_TO_DEPLOY }}" > ./devops/.cred.yaml
          echo "${{ vars.LOG_CONFIG }}" > ./devops/log_config.yaml

      - name: Execute deploy script
        run: |
          echo $DBUS_SESSION_BUS_ADDRESS
          echo $XDG_RUNTIME_DIR
          chmod +x ./devops/deploy.sh
          ./devops/deploy.sh
          echo $DBUS_SESSION_BUS_ADDRESS
          echo $XDG_RUNTIME_DIR
      - name: Execute deploy container
        id: pytest
        continue-on-error: true
        run: |
          ls -lA /dev/mqueue/
          ./devops/deploy.sh test ${{ vars.CYCLER_STATION_ID }} ${{ github.event.pull_request.head.ref }}
      - name: Clean up
        run: |
          echo "${{ steps.pytest.outcome }}"
          mkdir -p /tmp/github_wattrex
          mv ./log /tmp/github_wattrex/log_tests_${{ github.event.pull_request.head.ref }}
          docker image prune -f
          docker images -a
          if [ "${{ steps.pytest.outcome }}" = "failure" ]; then exit 1; fi
